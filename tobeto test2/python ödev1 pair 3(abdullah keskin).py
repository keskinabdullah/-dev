import math

#1-KullanÄ±cÄ±nÄ±n girdiÄŸi boy ve aÄŸÄ±rlÄ±k deÄŸerlerine gÃ¶re vÃ¼cut kitle indeksini (VKÄ° = aÄŸÄ±rlÄ±k/(boy*boy)) hesaplayÄ±nÄ±z.

def vucutÄ°ndeksi(boy, agirlik):
    vki = agirlik / (boy * boy)
    return vki

boy = float(input("LÃ¼tfen boyunuzu (metre cinsinde) giriniz: "))
agirlik = float(input("LÃ¼tfen kilonuzu giriniz: "))

vki = vucutÄ°ndeksi(boy, agirlik)

if vki <18:
    print("\nZayÄ±f VKÄ°:{}".format(vki))
elif vki >= 18 and vki <25 :
    print("\nNormal VKÄ°:{}".format(vki))
elif vki >= 25 and vki <30:
    print("\nKilolu VKÄ°:{}".format(vki))
elif vki >= 30 and vki <35:
    print("\nObez VKÄ°:{}".format(vki))
else:
    print("\nCiddi obez VKÄ°:{}".format(vki))

#2-MaaÅŸÄ± ve zam oranÄ± girilen iÅŸÃ§inin zamlÄ± maaÅŸÄ±nÄ± hesaplayarak ekranda gÃ¶steriniz.

def zamliMaas(maas, zamOrani):
    #zamMiktari = maas * (zamOrani / 100)
    zamliMaas = maas + (maas * zamOrani / 100)
    return zamliMaas

maas = float(input("LÃ¼tfen mevcut maaÅŸÄ± giriniz: "))
zamOrani = float(input("LÃ¼tfen zam oranÄ±nÄ± giriniz (Sadece pay kÄ±smÄ±nÄ± giriniz ,payda kÄ±smÄ± 100 alÄ±nacaktÄ±r): "))

zamli = float (zamliMaas(maas, zamOrani))
print("ZamlÄ± MaaÅŸ:", zamli)

#3-KullanÄ±cÄ±nÄ±n girdiÄŸi Ã¼Ã§ sayÄ± arasÄ±nda en bÃ¼yÃ¼k olanÄ± bulan ve sonucu yazdÄ±ran bir program yazÄ±nÄ±z.

a = float(input("Birinci sayiyi giriniz:"))
b = float(input("Ä°kinci sayiyi giriniz:"))
c = float(input("ÃœÃ§Ã¼ncÃ¼ sayiyi giriniz:"))

def maximum(a, b, c):
    list = [a, b, c]
    return max(list)
print("En buyuk sayi: ", maximum(a, b, c))
    
#4-Dairenin alanÄ±nÄ± ve Ã§evresini hesaplayan python kodunu yazÄ±nÄ±z.(Dairenin yarÄ±Ã§apÄ±nÄ± kullanÄ±cÄ±dan alÄ±nÄ±z)

def daireninAlani(yariCap):
    alan = yariCap ** 2 * math.pi
    return alan

def daireninCevresi(yariCap):
    cevre = 2 * math.pi * yariCap
    return cevre

yariCap = float(input("Yaricapi giriniz: "))

alan = daireninAlani(yariCap)
cevre = daireninCevresi(yariCap)

print("Dairenin AlanÄ±:", alan)
print("Dairenin Ã‡evresi:", cevre)

#5-KullanÄ±cÄ±dan alÄ±nan bir sayÄ±nÄ±n palindrom olup olmadÄ±ÄŸÄ±nÄ± bulan bir program yazÄ±nÄ±z.github'a ekleme yapalÄ±m, linkleri paylaÅŸalÄ±m lÃ¼tfen ğŸ™‚

##cozum (girilen sayÄ±nÄ±n polindrom olup olmadÄ±ÄŸÄ±nÄ±kontrol eder.)
def palindrom_mu(sayi):
    sayi_str = str(sayi)
    ters_sayi_str = sayi_str[::-1]
    return sayi_str == ters_sayi_str

sayi = input("LÃ¼tfen bir sayÄ± giriniz: ")

if palindrom_mu(sayi):
    print(sayi, "bir palindromdur.")
else:
    print(sayi, "bir palindrom deÄŸildir.")

##cozum (girilen metnin polindrom olup olmadÄ±ÄŸÄ±nÄ±kontrol eder.)
metin = input('Metni Girin : \n')
ters=metin[::-1]

print('Girilen metnin tersi = %s' % (ters)) ## %s string
if ters == metin:
    print('Girilen metin palindrom')
else:
    print('Girilen metin palindrom deÄŸil.')